{"version":3,"sources":["../src/Statix.js"],"names":[],"mappings":"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","file":"Statix.js","sourcesContent":["var connect = require('connect');\nvar http = require('http');\nvar serveStatic = require('serve-static');\nvar connectLiveReload = require('connect-livereload');\nvar liveReload = require('livereload');\nvar glob = require('glob');\nvar fs = require('fs');\nvar vfs = require('vinyl-fs');\nvar gaze = require('gaze');\nvar rimraf = require('rimraf');\nvar ncp = require('ncp').ncp;\n\nclass Statix {\n    constructor(configuration) {\n        this._createConfigurationDefaults(configuration);\n        this.middleware = this._configuration.middleware;\n        this.watchFunctions = [];\n    }\n\n    _runMiddleware() {\n        var length = this.middleware.length - 1;\n        var currentRunning = 0;\n\n        return new Promise(function(resolve, reject) {\n            var run = function() {\n                this._setUpMiddleware(this.middleware[currentRunning]).then(function() {\n                    if (currentRunning < length) {\n                        currentRunning ++;\n                        run();\n                    } else {\n                        resolve();\n                        if (this._configuration.useFileWatch === true) {\n                            this.watchFunctions.forEach(function(func) {\n                                func();\n                            });\n                        }\n                    }\n                }.bind(this));\n            }.bind(this);\n            run();\n        }.bind(this));\n    }\n\n    _setUpMiddleware(middleware) {\n        var directories = this._getMiddlewareDirectories(middleware.directories);\n\n        if (middleware.watch !== false) {\n            this.watchFunctions.push(function() {\n                gaze(directories, function(err, watcher) {\n                    watcher.on('all', function(event, filepath) {\n                        middleware.run(this._configuration.sourceFolder, this._configuration.tmpFolder, middleware.configuration, filepath);\n                    }.bind(this));\n                }.bind(this));\n            }.bind(this));\n        }\n\n        return middleware.run(\n            this._configuration.sourceFolder,\n            this._configuration.tmpFolder,\n            middleware.configuration,\n            directories);\n\n    }\n    \n    _getMiddlewareDirectories(middlewareDirectories) {\n        var directories = middlewareDirectories;\n\n        if (middlewareDirectories === undefined) {\n            return [];\n        }\n\n        if (middlewareDirectories.include) {\n            directories = [];\n            middlewareDirectories.include.forEach(function(path) {\n                directories.push(`${path}`);\n            });\n        }\n\n        if (middlewareDirectories.exclude) {\n            middlewareDirectories.exclude.forEach(function(path) {\n                directories.push(`!${path}`);\n            });\n        }\n\n\n        directories.forEach(function(directory, i) {\n            if (directory.slice(0, 1) === '!') {\n                directory= directory.slice(1, directory.length);\n                directories[i] = `!${this._configuration.sourceFolder}${directory}`\n            } else {\n                directories[i] = `${this._configuration.sourceFolder}${directory}`\n            }\n        }.bind(this));\n\n        return directories;\n    }\n    \n    _createConfigurationDefaults(configuration) {\n        this._configuration = configuration;\n        this._configuration.tmpFolder = `${__dirname}/../.tmp`;\n\n        if (isNaN(this._configuration.port)) {\n            this._configuration.port = 9000;\n        }\n    }\n\n    _initiateLiveReload() {\n        var server = liveReload.createServer();\n        server.watch(this._configuration.tmpFolder);\n    }\n\n    server() {\n        console.log('Initiating build tmp and then start server');\n        this._buildTemp().then(function() {\n            console.log(`Server started on localhost:${this._configuration.port}`);\n            var app = connect();\n            if (this._configuration.useFileWatch === true) {\n                app.use(connectLiveReload());\n                this._initiateLiveReload();\n            }\n\n            app.use(serveStatic(this._configuration.tmpFolder));\n\n            var server = http.createServer(app).listen(this._configuration.port);\n        }.bind(this));\n    }\n\n    _buildTemp() {\n        return this._runMiddleware();\n    }\n\n    _copyTmpToBuild() {\n        return new Promise(function(resolve, success) {\n            rimraf(this._configuration.outputFolder, function() {\n                ncp(this._configuration.tmpFolder, this._configuration.outputFolder, function(err) {\n                    if (err) {\n                        console.error(err);\n                    }\n                    resolve();\n                }.bind(this));\n            }.bind(this));\n        }.bind(this))\n    }\n\n    build() {\n        console.log('Build starting');\n        this._buildTemp().then(function() {\n            this._copyTmpToBuild().then(function() {\n                console.log(\"Build has finished.\");\n            });\n        }.bind(this))\n    }\n}\n\nmodule.exports = Statix;"]}