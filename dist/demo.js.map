{"version":3,"sources":["../src/demo.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,QAAQ,UAAR,CAAb;;AAEA,IAAI,cAAc,QAAQ,mBAAR,CAAlB;AACA,IAAI,gBAAgB,QAAQ,wBAAR,CAApB;;AAEA,IAAI,UAAU;AACV,kBAAc,IADJ;AAEV,UAAM,IAFI;AAGV,kBAAiB,QAAQ,GAAR,EAAjB,iBAHU;AAIV,kBAAiB,QAAQ,GAAR,EAAjB,gBAJU;AAKV,gBAAY,CAAC;AACT,qBAAa,CAAC,gBAAD,CADJ;AAET,aAAK,QAAQ,yBAAR,CAFI;AAGT,uBAAe;AACX,0BAAc;AACV,sBAAM;AADI,aADH;AAIX,mBAAO,CAAI,QAAQ,GAAR,EAAJ,2BAA4C,QAAQ,GAAR,EAA5C,2BAJI;AAKX,qBAAS;AALE;AAHN,KAAD,EAUT;AACC,qBAAa,CAAC,uBAAD,CADd;AAEC,aAAK,QAAQ,mBAAR;AAFN,KAVS,EAaT;AACC,qBAAa;AACT,qBAAS,CAAC,kBAAD,CADA;AAET,qBAAS,CAAC,uBAAD;AAFA,SADd;AAKC,aAAK,QAAQ,qBAAR;AALN,KAbS,EAmBT;AACC,aAAK,QAAQ,oBAAR,CADN;AAEC,uBAAe;AACX,0BAAc,2BADH;AAEX,2BAAe,2BAFJ;AAGX,sBAAU;AAHC,SAFhB;AAOC,eAAO;AAPR,KAnBS,EA2BT;AACC,aAAK,QAAQ,iCAAR,CADN;AAEC,uBAAe;AACX,0BAAc,8BADH;AAEX,2BAAe,8BAFJ;AAGX,sBAAU,kCAHC;AAIX,uBAAW,YAAY,IAAZ,CAAiB,SAJjB;AAKX,oBAAQ,YAAY,IAAZ,CAAiB;AALd,SAFhB;AASC,eAAO;AATR,KA3BS,EAqCT;AACC,qBAAa,CAAC,8BAAD,EAAiC,2BAAjC,CADd;AAEC,aAAK,QAAQ,2BAAR,CAFN;AAGC,uBAAe;AACX,0BAAc,cADH;AAEX,sBAAU;AAFC,SAHhB;AAOC,eAAO;AAPR,KArCS,EA6CT;AACC,qBAAa,CAAC,sCAAD,EAAyC,8BAAzC,EAAyE,2BAAzE,CADd;AAEC,aAAK,QAAQ,0BAAR,CAFN;AAGC,eAAO;AAHR,KA7CS,EAiDT;AACC,aAAK,QAAQ,sBAAR,CADN;AAEC,uBAAe;AACX,2BAAe;AADJ,SAFhB;AAKC,eAAO;AALR,KAjDS;AALF,CAAd;;AA+DA,IAAI,SAAS,IAAI,MAAJ,CAAW,OAAX,CAAb;;AAEA,OAAO,MAAP","file":"demo.js","sourcesContent":["var Statix = require('./Statix');\n\nvar iconOptions = require('../demo/lib/icons');\nvar webpackConfig = require('../demo/webpack.config');\n\nvar options = {\n    useFileWatch: true,\n    port: 8000,\n    sourceFolder: `${process.cwd()}/demo/source`,\n    outputFolder: `${process.cwd()}/demo/build`,\n    middleware: [{\n        directories: ['/**/*.html.hbs'],\n        run: require('./middleware/handlebars'),\n        configuration: {\n            templateData: {\n                test: \"test data\"\n            },\n            batch: [`${process.cwd()}/demo/source/layouts`, `${process.cwd()}/demo/source/partials`],\n            helpers: {}\n        }\n    }, {\n        directories: ['/assets/css/**/*.scss'],\n        run: require('./middleware/sass')\n    }, {\n        directories: {\n            include: ['/assets/img/**/*'],\n            exclude: ['/assets/img/svgs/**/*']\n        },\n        run: require('./middleware/images')\n    }, {\n        run: require('./middleware/icons'),\n        configuration: {\n            targetFolder: '/assets/img/svgs/icon-src',\n            targetCSSName: '/assets/img/svgs/icon.css',\n            template: '/assets/img/svgs/icon.css.hbs'\n        },\n        watch: false\n    }, {\n        run: require('./middleware/support-svg-images'),\n        configuration: {\n            targetFolder: '/assets/img/svgs/support-src',\n            targetCSSName: '/assets/img/svgs/support.css',\n            template: '/assets/img/svgs/support.css.hbs',\n            selectors: iconOptions.test.selectors,\n            colors: iconOptions.test.colors\n        },\n        watch: false\n    }, {\n        directories: ['/assets/img/svgs/support.css', '/assets/img/svgs/icon.css'],\n        run: require('./middleware/concat-files'),\n        configuration: {\n            outputFolder: '/assets/css/',\n            fileName: 'svg.css'\n        },\n        watch: false\n    }, {\n        directories: ['/assets/img/svgs/support-src-colorfy', '/assets/img/svgs/support.css', '/assets/img/svgs/icon.css'],\n        run: require('./middleware/clean-files'),\n        watch: false\n    }, {\n        run: require('./middleware/webpack'),\n        configuration: {\n            webpackConfig: webpackConfig\n        },\n        watch: false\n    }]\n};\n\nvar statix = new Statix(options);\n\nstatix.server();\n"]}