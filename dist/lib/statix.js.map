{"version":3,"sources":["../../src/lib/statix.js"],"names":[],"mappings":"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","file":"statix.js","sourcesContent":["var path = require('path');\nvar rimraf = require('rimraf');\nvar ncp = require('ncp');\nvar connect = require('connect');\nvar http = require('http');\nvar connectLiveReload = require('connect-livereload');\nvar liveReload = require('livereload');\nvar serveStatic = require('serve-static');\nvar chokidar = require('chokidar');\nvar Logger = require('./logger');\n\nclass Statix {\n    constructor(configuration) {\n        this._setConfiguration(configuration);\n        this.logger = new Logger();\n    }\n\n    _setConfiguration(configuration) {\n        this.plugins = configuration.plugins;\n        this.config = configuration;\n        this.config.tmpFolder = path.normalize(`${__dirname}/../../.tmp-server`);\n        this.config.buildTmpFolder = path.normalize(`${__dirname}/../../.tmp-build`);\n    }\n\n    _runPlugins(plugins, path) {\n        var length = plugins.length - 1;\n        var currentRunning = 0;\n\n        return new Promise(function(resolve, reject) {\n            var handleAfterRun = function(plugin) {\n                if (currentRunning < length) {\n                    currentRunning ++;\n                    run();\n                } else {\n                    resolve();\n                }\n            };\n\n            var run = function () {\n                if (Array.isArray(plugins[currentRunning]) === true) {\n                    this._runPlugins(plugins[currentRunning], path).then(() => {\n                        handleAfterRun();\n                    });\n                } else {\n                    plugins[currentRunning].setSourceFolder(this.config.sourceFolder);\n                    plugins[currentRunning].setDestinationFolder(path);\n                    plugins[currentRunning].run().then(() => {\n                        handleAfterRun();\n                    });\n                }\n            }.bind(this);\n\n            run();\n\n        }.bind(this));\n    }\n\n    _watchTmp() {\n        var watcher = chokidar.watch(this.config.tmpFolder + '/**/*.*', {\n            ignoreInitial: true\n        });\n\n        var tmpFolder = this.config.tmpFolder;\n\n        var getFilePath = function(filepath) {\n            var filePathIndex = filepath.indexOf(tmpFolder);\n\n            if (filePathIndex > -1) {\n                filepath = filepath.slice(tmpFolder.length, filepath.length);\n            }\n\n            return filepath;\n        };\n\n        watcher\n            .on('add', function(path) {\n                this.logger.logAdd(getFilePath(path) + ': has been added.');\n            }.bind(this))\n            .on('change', function(path) {\n                this.logger.logUpdate(getFilePath(path) + ': has been updated.');\n            }.bind(this))\n            .on('unlink', function(path) {\n                this.logger.logDelete(getFilePath(path) + ': has been removed.');\n            }.bind(this))\n    }\n\n    _watchPlugins(plugins) {\n        plugins.forEach(function (plugin) {\n            if (Array.isArray(plugin)) {\n                this._watchPlugins(plugin);\n            } else {\n                if (plugin.isWatchable === true) {\n                    var globs = plugin.getWatchGlobs(this.config.watchFolders);\n\n                    var watcher = chokidar.watch(globs, {\n                        ignoreInitial: true\n                    });\n\n                    var run = function(path) {\n                        plugin.run(path);\n                    }\n\n                    watcher\n                        .on('add', function(path) {\n                            run(path);\n                        })\n                        .on('change', function(path) {\n                            run(path);\n                        });\n                }\n            }\n        }.bind(this));\n    }\n\n    _tmpFolderGeneration(path) {\n        return new Promise(function(resolve, reject) {\n            this._runPlugins(this.plugins, path).then(() => {\n                resolve();\n            }).then(() => {\n                if (this.config.useFileWatch === true) {\n                    this._watchPlugins(this.plugins);\n                    this._watchTmp();\n                }\n            });\n        }.bind(this));\n    }\n\n    _createTmp() {\n        return this._tmpFolderGeneration(this.config.tmpFolder);\n    }\n\n    _createBuildTmp() {\n        return this._tmpFolderGeneration(this.config.buildTmpFolder);\n    }\n\n    _removeBuildTmp() {\n        return new Promise(function(resolve, reject) {\n            rimraf(this.config.buildTmpFolder, function() {\n\n            });\n        }.bind(this));\n    }\n\n    _compareBuildTmpToCurrentBuild() {\n        return new Promise(function(resolve, reject) {\n            resolve();\n        });\n    }\n\n    _copyBuildTmpToCurrentBuild() {\n        return new Promise(function(resolve, reject) {\n            rimraf(this.config.outputFolder, function() {\n                ncp(this.config.buildTmpFolder, this.config.outputFolder, function(err) {\n                    if (err) {\n                        console.error(err);\n                    }\n                    this._removeBuildTmp();\n                    resolve();\n                }.bind(this));\n            }.bind(this));\n        }.bind(this));\n    }\n\n    _initiateServer() {\n        this.logger.logUpdate(`Server started on localhost:${this.config.port}`);\n        var app = connect();\n\n        if (this.config.useFileWatch === true) {\n            app.use(connectLiveReload());\n            this._initiateLiveReload();\n        }\n\n        app.use(serveStatic(this.config.tmpFolder));\n\n        var server = http.createServer(app).listen(this.config.port);\n    }\n\n    _initiateLiveReload() {\n        var server = liveReload.createServer();\n        server.watch(this.config.tmpFolder);\n    }\n\n    server() {\n        this._createTmp().then(() => {\n            this._initiateServer();\n        });\n    }\n\n    build() {\n        this._createBuildTmp().then(function() {\n            this._compareBuildTmpToCurrentBuild().then(function() {\n                this._copyBuildTmpToCurrentBuild().then(function() {\n                    this.logger.logUpdate(`Build finished.`);\n                }.bind(this))\n            }.bind(this));\n        }.bind(this));\n    }\n}\n\nmodule.exports = Statix;"]}