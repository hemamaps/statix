{"version":3,"sources":["../../src/plugins/Plugin.js"],"names":[],"mappings":";;;;;;IAAM,M;AACF,oBAAY,aAAZ,EAA2B;AAAA;;AACvB,aAAK,aAAL,GAAqB,aAArB;AACH;;;;wCAEe,I,EAAM;AAClB,iBAAK,YAAL,GAAoB,IAApB;AACH;;;6CAEoB,I,EAAM;AACvB,iBAAK,iBAAL,GAAyB,IAAzB;AACH;;;sCAEa,W,EAAa;AACvB,gBAAI,QAAQ,EAAZ;AACA,gBAAI,MAAM,OAAN,CAAc,WAAd,MAA+B,IAAnC,EAAyC;AACrC,wBAAQ,YAAY,KAAZ,EAAR;AACH,aAFD,MAEO,IAAG,OAAO,WAAP,KAAuB,QAA1B,EAAoC;AACvC,wBAAQ,WAAR;AACH,aAFM,MAEA;AACH,oBAAI,YAAY,OAAhB,EAAyB;AACrB,4BAAQ,YAAY,OAApB;AACH;;AAED,oBAAI,YAAY,OAAhB,EAAyB;AACrB,gCAAY,OAAZ,CAAoB,OAApB,CAA4B,UAAU,IAAV,EAAgB;AACxC,8BAAM,IAAN,OAAe,IAAf;AACH,qBAFD;AAGH;AACJ;;AAED,gBAAI,iBAAiB,SAAjB,cAAiB,CAAS,YAAT,EAAuB,IAAvB,EAA6B;AAC9C,oBAAI,KAAK,OAAL,CAAa,GAAb,MAAsB,CAA1B,EAA6B;AACzB,2BAAO,MAAO,YAAP,GAAsB,KAAK,KAAL,CAAW,CAAX,EAAc,KAAK,MAAnB,CAA7B;AACH,iBAFD,MAEO;AACH,2BAAO,KAAK,YAAL,GAAoB,IAA3B;AACH;AACJ,aAND;;AAQA,gBAAI,MAAM,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACtB,qBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,MAA1B,EAAkC,GAAlC,EAAuC;AACnC,0BAAM,CAAN,IAAW,eAAe,KAAK,YAApB,EAAkC,MAAM,CAAN,CAAlC,CAAX;AACH;AACD,uBAAO,KAAP;AACH,aALD,MAKO;AACH,uBAAO,eAAe,KAAK,YAApB,EAAkC,KAAlC,CAAP;AACH;AACJ;;;;;;AAIL,OAAO,OAAP,GAAiB,MAAjB","file":"Plugin.js","sourcesContent":["class Plugin {\n    constructor(configuration) {\n        this.configuration = configuration;\n    }\n\n    setSourceFolder(path) {\n        this.sourceFolder = path;\n    }\n\n    setDestinationFolder(path) {\n        this.destinationFolder = path;\n    }\n\n    _getFilePaths(directories) {\n        var files = [];\n        if (Array.isArray(directories) === true) {\n            files = directories.slice();\n        } else if(typeof directories === 'string') {\n            files = directories;\n        } else {\n            if (directories.include) {\n                files = directories.include;\n            }\n\n            if (directories.exclude) {\n                directories.exclude.forEach(function (path) {\n                    files.push(`!${path}`);\n                });\n            }\n        }\n\n        var formatFilePath = function(sourceFolder, file) {\n            if (file.indexOf('!') === 0) {\n                return '!' +  sourceFolder + file.slice(1, file.length);\n            } else {\n                return '' + sourceFolder + file;\n            }\n        }\n\n        if (Array.isArray(files)) {\n            for (var i = 0; i < files.length; i++) {\n                files[i] = formatFilePath(this.sourceFolder, files[i]);\n            }\n            return files;\n        } else {\n            return formatFilePath(this.sourceFolder, files);\n        }\n    }\n\n}\n\nmodule.exports = Plugin;"]}